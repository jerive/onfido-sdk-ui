name: crossdevice

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run dependencies audit
        uses: oke-py/npm-audit-action@v1.7.2
        with:
          audit_level: moderate
          production_flag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: stefaniacardenas
          issue_labels: vulnerability
          dedupe_issues: true

      - name: Run linters
        run: npm run check

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration
        env:
          SDK_TOKEN_FACTORY_SECRET: ${{ secrets.SDK_TOKEN_FACTORY_SECRET }}

      # TODO: we're building the whole sdk again with NODE_ENV=test, just because some properties e.g. MOBILE_URL are different.
      # We could skip this if this option can be passed as option while bootstrapping
      - name: Build artifact
        run: npm run build

      - name: Run BundleWatch Check
        uses: jackyef/bundlewatch-gh-action@0.1.0
        with:
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

      - name: Publish to Surge
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: "https://${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh"
          project: './dist'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}

      - name: Build artifact
        run: NODE_ENV=staging npm run build

      - name: Publish to Surge
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: "https://staging-${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh"
          project: './dist'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}

      - name: Add comment with Surge link to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: "https://${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh ðŸš€\nhttps://staging-${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh ðŸš€"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test server
        run: npm run build:test
        id: testserver

      - name: Install Percy
        run: npm install -g @percy/cli

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          repository: it-ony/webtest
          path: webtest

      - name: Build webtest
        run: cd webtest && mvn --no-transfer-progress clean install && cd ..

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@v1

      - name: Run UI tests in Chrome
        working-directory: ./test/webtest
        id: chrome
        if: ${{ steps.testserver.outcome == 'success' }}
        run: ./run-ui-tests.sh "-Dbrowser=chrome -Dit.test=!MultipleBrowsersDocumentUploadIT -DthreadCount=10 -Denvironment=headless"
        shell: bash
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_JAVA }}
